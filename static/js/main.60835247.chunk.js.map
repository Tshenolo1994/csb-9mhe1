{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","language","displayName","onChange","value","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHTML","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uPAWe,SAASA,EAAT,GAA6D,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAChE,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACE,sBAAKE,UAAU,eAAf,UACGN,EACD,wBACEO,KAAK,SACLD,UAAU,yBACVE,QAAS,kBAAMH,GAAQ,SAACI,GAAD,OAAeA,MAHxC,SAKE,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGlD,cAAC,aAAD,CACEC,eAhBN,SAAsBC,EAAQC,EAAMb,GAClCD,EAASC,IAgBLA,MAAOA,EACPI,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,QClCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE7B,EAA0BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAPX,mBAAOtB,EAAP,KAAc6B,EAAd,KAeA,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUhC,MAChD,CAACuB,EAAavB,IAEV,CAACA,EAAO6B,G,MCjBF,SAASI,IACtB,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,uBAAD,OAELP,EAFK,6BAGJE,EAHI,+BAIHE,EAJG,gCAOR,KACH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKlC,UAAU,gBAAf,UACE,cAACR,EAAD,CACEC,SAAS,MACTC,YAAY,OACZE,MAAOkC,EACPnC,SAAUoC,IAEZ,cAACvC,EAAD,CACEC,SAAS,MACTC,YAAY,MACZE,MAAOoC,EACPrC,SAAUsC,IAEZ,cAACzC,EAAD,CACEC,SAAS,KACTC,YAAY,aACZE,MAAOsC,EACPvC,SAAUwC,OAGd,qBAAKnC,UAAU,OAAf,SACE,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eChDjB,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACrB,EAAD,MAEFiB,K","file":"static/js/main.60835247.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/theme/twilight.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Editor({ language, displayName, onChange, value }) {\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n  return (\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\n      <div className=\"editor-title\">\n        {displayName}\n        <button\n          type=\"button\"\n          className=\"expand-collapse-button\"\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"twilight\",\n          lineNumbers: true\n        }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"codepen-clone-\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n","import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport \"./index.css\";\n\nexport default function App() {\n  const [html, setHTML] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n  <html>\n  <body>${html}</body>\n  <style>${css}</style>\n  <script>${js}</script>\n  </html>\n  `);\n    }, 250);\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHTML}\n        />\n        <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"js\"\n          displayName=\"JAVASCRIPT\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100% \"\n        />\n      </div>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}